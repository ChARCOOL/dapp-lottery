/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Lottery, LotteryInterface } from "../Lottery";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "enter",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPlayers",
    outputs: [
      {
        internalType: "address payable[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRandomNumber",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lotteryId",
        type: "uint256",
      },
    ],
    name: "getWinnerByLottery",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lotteries",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pickWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomResult",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50736168499c0cffcacd319c818142124b7a15e857ab7301be23585060835e02b77ef475b0cc51aa1e07098173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050507fd89b2bf150e3b9e13446986e571fb9cab24b13cea0a43ea20a6049a85cc807cc60001b6001819055506703782dace9d9000060028190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060805160601c60a05160601c61148a61015e600039600081816106fd01526109d701526000818161079e015261099b015261148a6000f3fe6080604052600436106100a75760003560e01c80638da5cb5b116100645780638da5cb5b146101be57806394985ddd146101e9578063dbdff2c114610212578063e580f47b1461023d578063e97dcb6214610268578063f71d96cb14610272576100a7565b806312065fe0146100ac5780631398e076146100d7578063281d098d1461011457806342619f66146101515780635d495aea1461017c5780638b5b9ccc14610193575b600080fd5b3480156100b857600080fd5b506100c16102af565b6040516100ce9190611199565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f99190610cc5565b6102b7565b60405161010b9190610ff5565b60405180910390f35b34801561012057600080fd5b5061013b60048036038101906101369190610cc5565b6102ea565b6040516101489190610ff5565b60405180910390f35b34801561015d57600080fd5b50610166610327565b6040516101739190611199565b60405180910390f35b34801561018857600080fd5b5061019161032d565b005b34801561019f57600080fd5b506101a8610647565b6040516101b5919061104e565b60405180910390f35b3480156101ca57600080fd5b506101d36106d5565b6040516101e09190610fda565b60405180910390f35b3480156101f557600080fd5b50610210600480360381019061020b9190610c89565b6106fb565b005b34801561021e57600080fd5b50610227610797565b6040516102349190611070565b60405180910390f35b34801561024957600080fd5b50610252610899565b60405161025f9190611199565b60405180910390f35b61027061089f565b005b34801561027e57600080fd5b5061029960048036038101906102949190610cc5565b61094d565b6040516102a69190610ff5565b60405180910390f35b600047905090565b60076020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006007600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60035481565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146103bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b4906110f9565b60405180910390fd5b60006005805490506003546103d2919061136f565b9050600060058281548110610410577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060058281548110610477577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660076000600654815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506006600081548092919061050890611312565b9190505550600067ffffffffffffffff81111561054e577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405190808252806020026020018201604052801561057c5781602001602082028036833780820191505090505b5060059080519060200190610592929190610b65565b506000808273ffffffffffffffffffffffffffffffffffffffff16476040516105ba90610fc5565b60006040518083038185875af1925050503d80600081146105f7576040519150601f19603f3d011682016040523d82523d6000602084013e6105fc565b606091505b509150915081610641576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063890611179565b60405180910390fd5b50505050565b606060058054806020026020016040519081016040528092919081815260200182805480156106cb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610681575b5050505050905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610789576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078090611159565b60405180910390fd5b610793828261098c565b5050565b60006002547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107f59190610fda565b60206040518083038186803b15801561080d57600080fd5b505afa158015610821573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108459190610cee565b1015610886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087d90611139565b60405180910390fd5b610894600154600254610997565b905090565b60065481565b662386f26fc1000034116108e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108df90611119565b60405180910390fd5b6005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6005818154811061095d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806003819055505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f000000000000000000000000000000000000000000000000000000000000000084866000604051602001610a0b92919061108b565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610a3893929190611010565b602060405180830381600087803b158015610a5257600080fd5b505af1158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a9190610c60565b506000610aac8460003060008089815260200190815260200160002054610af6565b9050600160008086815260200190815260200160002054610acd9190611225565b60008086815260200190815260200160002081905550610aed8482610b32565b91505092915050565b600084848484604051602001610b0f94939291906110b4565b6040516020818303038152906040528051906020012060001c9050949350505050565b60008282604051602001610b47929190610f99565b60405160208183030381529060405280519060200120905092915050565b828054828255906000526020600020908101928215610bde579160200282015b82811115610bdd5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610b85565b5b509050610beb9190610bef565b5090565b5b80821115610c08576000816000905550600101610bf0565b5090565b600081519050610c1b8161140f565b92915050565b600081359050610c3081611426565b92915050565b600081359050610c458161143d565b92915050565b600081519050610c5a8161143d565b92915050565b600060208284031215610c7257600080fd5b6000610c8084828501610c0c565b91505092915050565b60008060408385031215610c9c57600080fd5b6000610caa85828601610c21565b9250506020610cbb85828601610c36565b9150509250929050565b600060208284031215610cd757600080fd5b6000610ce584828501610c36565b91505092915050565b600060208284031215610d0057600080fd5b6000610d0e84828501610c4b565b91505092915050565b6000610d238383610d2f565b60208301905092915050565b610d388161128d565b82525050565b610d478161128d565b82525050565b610d568161127b565b82525050565b6000610d67826111c4565b610d7181856111e7565b9350610d7c836111b4565b8060005b83811015610dad578151610d948882610d17565b9750610d9f836111da565b925050600181019050610d80565b5085935050505092915050565b610dc3816112ab565b82525050565b610dda610dd5826112ab565b61135b565b82525050565b6000610deb826111cf565b610df581856111f8565b9350610e058185602086016112df565b610e0e816113fe565b840191505092915050565b6000610e26600a83611214565b91507f4f6e6c79206f776e6572000000000000000000000000000000000000000000006000830152602082019050919050565b6000610e66601283611214565b91507f496e73756666696369656e742066756e647300000000000000000000000000006000830152602082019050919050565b6000610ea6601b83611214565b91507f4e6f7420656e6f756768204c494e4b20696e20636f6e747261637400000000006000830152602082019050919050565b6000610ee6601f83611214565b91507f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006000830152602082019050919050565b6000610f26600083611209565b9150600082019050919050565b6000610f40600883611214565b91507f4e6f742073656e740000000000000000000000000000000000000000000000006000830152602082019050919050565b610f7c816112d5565b82525050565b610f93610f8e826112d5565b611365565b82525050565b6000610fa58285610dc9565b602082019150610fb58284610f82565b6020820191508190509392505050565b6000610fd082610f19565b9150819050919050565b6000602082019050610fef6000830184610d4d565b92915050565b600060208201905061100a6000830184610d3e565b92915050565b60006060820190506110256000830186610d4d565b6110326020830185610f73565b81810360408301526110448184610de0565b9050949350505050565b600060208201905081810360008301526110688184610d5c565b905092915050565b60006020820190506110856000830184610dba565b92915050565b60006040820190506110a06000830185610dba565b6110ad6020830184610f73565b9392505050565b60006080820190506110c96000830187610dba565b6110d66020830186610f73565b6110e36040830185610d4d565b6110f06060830184610f73565b95945050505050565b6000602082019050818103600083015261111281610e19565b9050919050565b6000602082019050818103600083015261113281610e59565b9050919050565b6000602082019050818103600083015261115281610e99565b9050919050565b6000602082019050818103600083015261117281610ed9565b9050919050565b6000602082019050818103600083015261119281610f33565b9050919050565b60006020820190506111ae6000830184610f73565b92915050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000611230826112d5565b915061123b836112d5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112705761126f6113a0565b5b828201905092915050565b6000611286826112b5565b9050919050565b6000611298826112b5565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156112fd5780820151818401526020810190506112e2565b8381111561130c576000848401525b50505050565b600061131d826112d5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113505761134f6113a0565b5b600182019050919050565b6000819050919050565b6000819050919050565b600061137a826112d5565b9150611385836112d5565b925082611395576113946113cf565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000601f19601f8301169050919050565b6114188161129f565b811461142357600080fd5b50565b61142f816112ab565b811461143a57600080fd5b50565b611446816112d5565b811461145157600080fd5b5056fea26469706673582212202adbaf1cf976fcfda48e8bcf14bce37a697774db4e7b7e773c42c986062499fb64736f6c63430008000033";

type LotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Lottery__factory extends ContractFactory {
  constructor(...args: LotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Lottery";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Lottery> {
    return super.deploy(overrides || {}) as Promise<Lottery>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Lottery {
    return super.attach(address) as Lottery;
  }
  connect(signer: Signer): Lottery__factory {
    return super.connect(signer) as Lottery__factory;
  }
  static readonly contractName: "Lottery";
  public readonly contractName: "Lottery";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LotteryInterface {
    return new utils.Interface(_abi) as LotteryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Lottery {
    return new Contract(address, _abi, signerOrProvider) as Lottery;
  }
}
